{"version":3,"sources":["pages/Login/index.tsx","pages/NoMatch/index.tsx","pages/Home/index.tsx","pages/ReduxTest/index.tsx","store/actions/index.ts","pages/LifeCycle/index.tsx","utils/request.ts","utils/auth.ts","pages/Test/index.tsx","api/account.ts","layouts/LayoutBase/index.tsx","router/RouterMap.tsx","router/routers.ts","layouts/LayoutApp/index.tsx","router/index.tsx","store/reducers/index.ts","store/reducers/user.ts","store/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Login","className","styles","login","Component","NoMatch","props","state","status","title","subTitle","extra","to","pathname","NoMatchBack","type","Home","home","Counter","num","handleClick","bind","handleChange","setClick","this","e","setState","target","value","onChange","onClick","connect","counter","count","dispatch","setUser","LifeCycle","NProgress","configure","showSpinner","request","axios","create","baseURL","timeout","withCredentials","headers","Authorization","Cookies","get","interceptors","use","config","start","error","Promise","reject","response","done","res","data","code","remove","message","warning","Error","TestPage","openRouterTo","requestTo","history","push","test","service","url","method","token","set","expires","setToken","LayoutBase","layout","children","RouterMap","routers","map","item","key","exact","length","path","render","component","appLayout","ReduxTest","Test","App","combineReducers","action","composeEnhancers","composeWithDevTools","store","createStore","reducer","applyMiddleware","thunk","Store","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef1a735f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './styles.less';\r\nexport default class Login extends Component<any> {\r\n  render() {\r\n    return <div className={styles.login}>login page</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Result } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {}\r\n\r\nexport default class NoMatch extends Component<any> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={\r\n          <Link\r\n            to={{\r\n              pathname: '/',\r\n              state: {\r\n                NoMatchBack: true\r\n              }\r\n            }}\r\n          >\r\n            <Button type=\"primary\"> 回到首页</Button>\r\n          </Link>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from './styles.less';\r\nexport default class Home extends Component<any> {\r\n  render() {\r\n    return <div className={styles.home}>home page</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Button, Input } from 'antd';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setUser } from '../../store/actions';\r\n\r\ninterface Props {\r\n  setClick: (num: Number) => void;\r\n  num: Number;\r\n}\r\ninterface State {\r\n  num: Number;\r\n}\r\n\r\nclass Counter extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      num: 1\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleClick() {\r\n    const { setClick } = this.props;\r\n    const { num } = this.state;\r\n    setClick(num);\r\n  }\r\n  handleChange(e: any) {\r\n    this.setState({\r\n      num: e.target.value\r\n    });\r\n  }\r\n  render() {\r\n    const { num } = this.props;\r\n    return (\r\n      <div>\r\n        <div>input.state.num：{this.state.num}</div>\r\n        <div>num：{num}</div>\r\n        <Input onChange={e => this.handleChange(e)} />\r\n        <Button onClick={this.handleClick}>Increase</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {\r\n    num: state.counter.count\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return {\r\n    setClick: (num: Number) => dispatch(setUser(num))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","export const SET_NUM = 'SET_NUM';\r\n\r\nexport const setUser = (num: Number) => ({\r\n  type: SET_NUM,\r\n  num\r\n});\r\n","import React, { Component } from 'react';\r\n\r\ninterface Props {}\r\ninterface State {}\r\n\r\nclass LifeCycle extends Component<Props, State> {\r\n  render() {\r\n    return <>LifeCycle</>;\r\n  }\r\n}\r\n\r\nexport default LifeCycle;\r\n","import axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport 'nprogress/nprogress.css';\r\nimport { getToken, removeToken } from './auth';\r\nimport { message } from 'antd';\r\n\r\nNProgress.configure({\r\n  showSpinner: false\r\n});\r\n\r\nlet baseURL =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:9527'\r\n    : 'http://localhost';\r\n\r\nconst request = axios.create({\r\n  baseURL: baseURL,\r\n  timeout: 5000,\r\n  withCredentials: false,\r\n  headers: {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json',\r\n    Authorization: 'Bearer ' + getToken()\r\n  }\r\n});\r\n\r\n// Request interceptors\r\nrequest.interceptors.request.use(\r\n  config => {\r\n    NProgress.start();\r\n    return config;\r\n  },\r\n  error => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptors\r\nrequest.interceptors.response.use(\r\n  response => {\r\n    NProgress.done();\r\n    const res = response.data;\r\n    if (res.code !== 200) {\r\n      removeToken();\r\n      message.warning(res.message);\r\n      return Promise.reject(new Error(res.message || 'Error'));\r\n    } else {\r\n      return response.data;\r\n    }\r\n  },\r\n  error => {\r\n    NProgress.done();\r\n    message.warning(error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default request;\r\n","import Cookies from 'js-cookie';\r\n\r\nlet inHalfADay = 1;\r\n\r\nconst TokenKey = 'USER_TOKEN';\r\n\r\nexport function getToken() {\r\n  return Cookies.get(TokenKey);\r\n}\r\n\r\nexport function setToken(token: string) {\r\n  return Cookies.set(TokenKey, token, {\r\n    expires: inHalfADay\r\n  });\r\n}\r\n\r\nexport function removeToken() {\r\n  return Cookies.remove(TokenKey);\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from './styles.less';\r\n\r\nimport { Button } from 'antd';\r\n\r\nimport { login } from '../../api/account';\r\nimport { setToken } from '../../utils/auth';\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\ninterface State {\r\n  to: Boolean;\r\n}\r\n\r\nclass TestPage extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      to: false\r\n    };\r\n\r\n    // 绑定 this\r\n    this.openRouterTo = this.openRouterTo.bind(this);\r\n    this.requestTo = this.requestTo.bind(this);\r\n  }\r\n  openRouterTo() {\r\n    this.props.history.push({\r\n      pathname: '/app/ReduxTest',\r\n      state: { test: 12121 }\r\n    });\r\n    //目标页面取参 this.props.location.state;\r\n  }\r\n  requestTo() {\r\n    login();\r\n  }\r\n  setToken() {\r\n    setToken('dadas');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.test}>\r\n        <Button onClick={this.openRouterTo}>测试路由传参</Button>\r\n        <Button onClick={this.requestTo}>测试login接口</Button>\r\n        <Button onClick={this.setToken}>setToken</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestPage;\r\n","import service from '../utils/request';\r\n\r\nexport const login = () => {\r\n  return service.request({\r\n    url: '/api/login',\r\n    method: 'post'\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./styles.less\";\r\n\r\nexport default class LayoutBase extends Component<any> {\r\n  render() {\r\n    return <div className={styles.layout}>{this.props.children}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\ninterface RouterMapOption {\r\n  routers: Array<any>;\r\n}\r\n\r\nexport default class RouterMap extends Component<RouterMapOption, any> {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        {this.props.children}\r\n        {this.props.routers.map((item, key) => {\r\n          return (\r\n            <Route\r\n              exact={!(item.routers && item.routers.length > 0)}\r\n              path={item.path}\r\n              key={key}\r\n              render={props => {\r\n                //auth from utils/auth.ts return权限 控制菜单view\r\n                if ('auth') {\r\n                  return (\r\n                    <item.component {...props} routers={item.routers || null} />\r\n                  );\r\n                }\r\n                return <Redirect to=\"/login\" />;\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n        <Redirect to=\"/404\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n","import AppLayout from '../layouts/LayoutApp';\r\n\r\nimport { Home, ReduxTest, LifeCycle, Test } from './components';\r\n\r\nexport default [\r\n  {\r\n    path: '/app',\r\n    component: AppLayout,\r\n    routers: [\r\n      {\r\n        title: '主页',\r\n        path: '/app/home',\r\n        component: Home\r\n      },\r\n      {\r\n        title: 'ReduxTest',\r\n        path: '/app/ReduxTest',\r\n        component: ReduxTest\r\n      },\r\n      {\r\n        title: 'LifeCycle',\r\n        path: '/app/LifeCycle',\r\n        component: LifeCycle\r\n      },\r\n      {\r\n        title: 'Test',\r\n        path: '/app/test',\r\n        component: Test\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React, { Component } from 'react';\r\nimport styles from './styles.less';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport RouterMap from '../../router/RouterMap';\r\n\r\nexport default class AppLayout extends Component<any> {\r\n  render() {\r\n    return (\r\n      <div className={styles.appLayout}>\r\n        <RouterMap routers={this.props.routers}>\r\n          <Route\r\n            exact\r\n            path=\"/app\"\r\n            component={() => {\r\n              return <Redirect to=\"/app/home\" />;\r\n            }}\r\n          />\r\n        </RouterMap>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { Login, NoMatch } from './components';\r\nimport LayoutBase from '../layouts/LayoutBase';\r\nimport routers from './routers';\r\nimport RouterMap from './RouterMap';\r\n\r\nexport default class App extends Component<any> {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={() => {\r\n              return <Redirect to=\"/app\" />;\r\n            }}\r\n          />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/404\" component={NoMatch} />\r\n          <LayoutBase>\r\n            <RouterMap routers={routers} />\r\n          </LayoutBase>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { counter } from './user';\r\n\r\nexport default combineReducers({\r\n  counter: counter\r\n});\r\n","export const counter = (state = { count: 0 }, action: any) => {\r\n  switch (action.type) {\r\n    case 'SET_NUM':\r\n      return { count: action.num };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport reducer from './reducers';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  // options like actionSanitizer, stateSanitizer\r\n});\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default class Store extends Component<any> {\r\n  render() {\r\n    return <Provider store={store}>{this.props.children}</Provider>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.less';\r\nimport RouterView from './router';\r\nimport Store from './store';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Store>\r\n          <RouterView />\r\n        </Store>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}